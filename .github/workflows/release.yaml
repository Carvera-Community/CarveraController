name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build-windows-artifacts:
    name: build-windows-${{ matrix.platform }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [win32]
        include:
          - platform: win32
            arch: x64
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        architecture: ${{ matrix.arch }}

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: windows

    - name: Install 7zip
      run: choco install 7zip.install
    
    - name: Install Mesa
      shell: cmd
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" x mesa.7z
        mklink opengl32.dll "x64\opengl32.dll"
        mklink libglapi.dll "x64\libglapi.dll"
      working-directory: build\tests\Debug

    - name: Build release
      run: poetry run build --os windows

    - name: Rename artifact
      run: ./scripts/rename-release-file.sh windows

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/dist/carveracontroller/carveracontroller-*.exe
        retention-days: 2

  build-macos-artifacts:
    name: build-macos-${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ Intel, AppleSilicon ]
        include:
          - platform: Intel
            image: macos-13
          - platform: AppleSilicon
            image: macos-14
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: macos

    - name: Build release
      run: poetry run build --os macos
    
    - name: Debug
      run: ls ./dist

    - name: Install create-dmg
      run: brew install create-dmg

    - name: Create dmg file
      run: ./scripts/create-dmg.sh

    - name: Rename artifact
      run: ./scripts/rename-release-file.sh macos

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-assets-${{ matrix.platform }}
        path: ${{ github.workspace }}/dist/carveracontroller-community-*.dmg
        retention-days: 2

  build-linux-artifacts:
    name: build-linux-generic
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and dependencies
      uses: ./.github/actions/bootstrap-poetry
      with:
        os: linux
    
    - name: Install MTDev
      run: sudo apt-get install -y mtdev-tools

    - name: Build release
      run: xvfb-run poetry run build --os linux

    - name: Rename artifact
      run: ./scripts/rename-release-file.sh linux

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-assets
        path: ${{ github.workspace }}/dist/carveracontroller-community-*.AppImage
        retention-days: 2

  publish-release:
    needs: [ build-windows-artifacts, build-macos-artifacts, build-linux-artifacts ]
    runs-on: ubuntu-latest
    environment: publish-release
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{  github.ref_name }}
          tag_name: ${{  github.ref_name }}
          draft: true
          files: |
            windows-assets-*/carveracontroller-*.exe
            macos-assets-*/carveracontroller-community-*.dmg
            linux-assets/carveracontroller-community-*.AppImage
